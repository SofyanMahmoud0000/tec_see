## Autogenerated by Scribe. DO NOT MODIFY.

name: Task
description: |-

  APIs for tasks
endpoints:
  -
    httpMethods:
      - POST
    uri: 'api/tasks/{id}/submit'
    metadata:
      groupName: Task
      groupDescription: |-

        APIs for tasks
      subgroup: ''
      subgroupDescription: ''
      title: 'Submit a task'
      description: 'This endpoint enable the user to submit a task'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The id of the task to be submitted.'
        required: true
        example: 6
        type: integer
        custom: []
    cleanUrlParameters:
      id: 6
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      detail:
        name: detail
        description: ''
        required: false
        example: non
        type: string
        custom: []
      done:
        name: done
        description: ''
        required: true
        example: true
        type: boolean
        custom: []
    cleanBodyParameters:
      detail: non
      done: true
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
             "message": "The task has been submitted successfully"
          }
        headers: []
        description: '201'
        custom: []
      -
        status: 400
        content: |-
          {
             "errors": "The task is already submitted"
          }
        headers: []
        description: '400'
        custom: []
      -
        status: 403
        content: |-
          {
             "errors": "You are not assigned to this task"
          }
        headers: []
        description: '403'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer d3aZeh841vEPfDca6k5V6gb'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/tasks
    metadata:
      groupName: Task
      groupDescription: |-

        APIs for tasks
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new task'
      description: 'This endpoint enable the admin to create new task'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: ''
        required: true
        example: laboriosam
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: incidunt
        type: string.
        custom: []
      project_id:
        name: project_id
        description: 'The id of the project which the task belong to.'
        required: true
        example: 15
        type: integer
        custom: []
      user_id:
        name: user_id
        description: 'The id of the user assigned to this task.'
        required: true
        example: 9
        type: integer
        custom: []
    cleanBodyParameters:
      title: laboriosam
      description: incidunt
      project_id: 15
      user_id: 9
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
           "task": {
             "title": "task 2",
             "description": "description",
             "project_id": "1",
             "user_id": "11",
             "updated_at": "2022-09-30T21:20:07.000000Z",
             "created_at": "2022-09-30T21:20:07.000000Z",
             "id": 2
           }
          }
        headers: []
        description: '201'
        custom: []
      -
        status: 400
        content: |-
          {
           "errors": {
             "title": [
                 "The title field is required."
             ]
           }
          }
        headers: []
        description: '400'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer DVbfa6d4Ece1akg856PZhv3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/tasks
    metadata:
      groupName: Task
      groupDescription: |-

        APIs for tasks
      subgroup: ''
      subgroupDescription: ''
      title: 'List the tasks'
      description: 'This endpoint enable the admin to get all tasks'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "tasks": [
             {
                 "id": 2,
                 "title": "task 2",
                 "description": "description",
                 "detail": null,
                 "done": 0,
                 "project_id": 1,
                 "user_id": 11,
                 "created_at": "2022-09-30T21:20:07.000000Z",
                 "updated_at": "2022-09-30T21:20:07.000000Z"
             },
             {
                 "id": 3,
                 "title": "task 33",
                 "description": "description",
                 "detail": null,
                 "done": 0,
                 "project_id": 1,
                 "user_id": 11,
                 "created_at": "2022-09-30T21:25:30.000000Z",
                 "updated_at": "2022-09-30T21:30:18.000000Z"
             }
           ]
          }
        headers: []
        description: '200'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer eZh6vfbaa6Vd5Dkg8cE3P14'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/tasks/{id}'
    metadata:
      groupName: Task
      groupDescription: |-

        APIs for tasks
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a task'
      description: 'This endpoint enable the admin to get a task with specific id'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The id of the task to be gotten.'
        required: true
        example: 7
        type: integer
        custom: []
    cleanUrlParameters:
      id: 7
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "task": {
             "id": 3,
             "title": "task 33",
             "description": "description",
             "detail": null,
             "done": 0,
             "project_id": 1,
             "user_id": 11,
             "created_at": "2022-09-30T21:25:30.000000Z",
             "updated_at": "2022-09-30T21:30:18.000000Z"
           }
          }
        headers: []
        description: '200'
        custom: []
      -
        status: 404
        content: |-
          {
             "errors": "This task doesn't exist"
          }
        headers: []
        description: '404'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 5Eefchvgkd6a81D4Z3a6VPb'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/tasks/{id}'
    metadata:
      groupName: Task
      groupDescription: |-

        APIs for tasks
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a task'
      description: 'This endpoint enable the admin to update a task'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The id of the task to be updated.'
        required: true
        example: 16
        type: integer
        custom: []
    cleanUrlParameters:
      id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: ''
        required: false
        example: incidunt
        type: string.
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: facere
        type: string.
        custom: []
      project_id:
        name: project_id
        description: 'The id of the project which the task belong to.'
        required: true
        example: 4
        type: integer
        custom: []
      user_id:
        name: user_id
        description: 'The id of the user assigned to this task.'
        required: true
        example: 12
        type: integer
        custom: []
      detail:
        name: detail
        description: ''
        required: false
        example: dicta
        type: string
        custom: []
      done:
        name: done
        description: ''
        required: false
        example: true
        type: boolean
        custom: []
    cleanBodyParameters:
      title: incidunt
      description: facere
      project_id: 4
      user_id: 12
      detail: dicta
      done: true
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
             "message": "The task has been updated successfully"
          }
        headers: []
        description: '201'
        custom: []
      -
        status: 404
        content: |-
          {
             "errors": "This task doesn't exist"
          }
        headers: []
        description: '404'
        custom: []
      -
        status: 400
        content: |-
          {
           "errors": {
             "done": [
                 "The done field must be true or false."
             ],
             "project_id": [
                 "The selected project id is invalid."
             ]
           }
          }
        headers: []
        description: '400'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4E536P6bVcefD8haakZg1vd'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/tasks/{id}'
    metadata:
      groupName: Task
      groupDescription: |-

        APIs for tasks
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a task'
      description: 'This endpoint enable the admin to delete a task with specific id'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The id of the task to be deleted.'
        required: true
        example: 9
        type: integer
        custom: []
    cleanUrlParameters:
      id: 9
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "message": "The task has been deleted successfully"
          }
        headers: []
        description: '200'
        custom: []
      -
        status: 404
        content: |-
          {
             "errors": "This task doesn't exist"
          }
        headers: []
        description: '404'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1ebEPV6c5kah3v6a4Z8gdfD'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/tasks/{id}/assign_employee/{user_id}'
    metadata:
      groupName: Task
      groupDescription: |-

        APIs for tasks
      subgroup: ''
      subgroupDescription: ''
      title: 'Assign user for a task'
      description: 'This endpoint enable the admin to assign a user for a task'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The id of the task.'
        required: true
        example: 8
        type: integer
        custom: []
      user_id:
        name: user_id
        description: 'The id of the user to be assigned.'
        required: true
        example: 14
        type: integer
        custom: []
    cleanUrlParameters:
      id: 8
      user_id: 14
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
             "message": "The task has been submitted to Sofyan successfully"
          }
        headers: []
        description: '201'
        custom: []
      -
        status: 404
        content: |-
          {
             "errors": "This user doesn't exist"
          }
        headers: []
        description: '404'
        custom: []
      -
        status: 404
        content: |-
          {
             "errors": "This task doesn't exist"
          }
        headers: []
        description: '404'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 8Vec361Zfab4k5DEhgdaP6v'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/tasks/{id}/no_employee'
    metadata:
      groupName: Task
      groupDescription: |-

        APIs for tasks
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove assigned user from a task'
      description: 'This endpoint enable the admin to remove the assigned user from a task'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The id of the task.'
        required: true
        example: 9
        type: integer
        custom: []
    cleanUrlParameters:
      id: 9
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
             "message": "There is no user assigned to this task now"
          }
        headers: []
        description: '201'
        custom: []
      -
        status: 404
        content: |-
          {
             "errors": "This task doesn't exist"
          }
        headers: []
        description: '404'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer cv3bead6hPV6g14ZDakE85f'
    controller: null
    method: null
    route: null
    custom: []
