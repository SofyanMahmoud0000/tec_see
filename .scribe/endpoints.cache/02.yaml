## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Projects for admins'
description: |-

  APIs for projects
endpoints:
  -
    httpMethods:
      - POST
    uri: api/projects
    metadata:
      groupName: 'Projects for admins'
      groupDescription: |-

        APIs for projects
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a project'
      description: 'This endpoint enable the admin to create new project'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: ''
        required: true
        example: in
        type: string
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: atque
        type: string.
        custom: []
    cleanBodyParameters:
      title: in
      description: atque
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
           "project": {
             "title": "project 2",
             "description": "description",
             "updated_at": "2022-09-30T20:10:47.000000Z",
             "created_at": "2022-09-30T20:10:47.000000Z",
             "id": 1
           }
          }
        headers: []
        description: '201'
        custom: []
      -
        status: 400
        content: |-
          {
           "errors": {
             "title": [
                 "The title field is required."
             ]
           }
          }
        headers: []
        description: '400'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer e58acv6f1EDk3gdZ6baPhV4'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/projects
    metadata:
      groupName: 'Projects for admins'
      groupDescription: |-

        APIs for projects
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all projects'
      description: 'This endpoint enable the admin to get all projects'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "projects": [
             {
                 "id": 1,
                 "title": "updated title",
                 "description": null,
                 "created_at": "2022-09-30T20:10:47.000000Z",
                 "updated_at": "2022-09-30T20:49:13.000000Z"
             },
             {
                 "id": 4,
                 "title": "project 3",
                 "description": "description",
                 "created_at": "2022-09-30T20:54:40.000000Z",
                 "updated_at": "2022-09-30T20:54:40.000000Z"
             }
           ]
          }
        headers: []
        description: '200'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer k6agh3bZadcP8E14feVv65D'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/projects/{id}'
    metadata:
      groupName: 'Projects for admins'
      groupDescription: |-

        APIs for projects
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a specific project'
      description: 'This endpoint enable the admin to get a project with specific id'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The id of the project to be gotten.'
        required: true
        example: 11
        type: integer
        custom: []
    cleanUrlParameters:
      id: 11
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "project": {
             "id": 1,
             "title": "updated title",
             "description": null,
             "created_at": "2022-09-30T20:10:47.000000Z",
             "updated_at": "2022-09-30T20:49:13.000000Z"
           }
          }
        headers: []
        description: '200'
        custom: []
      -
        status: 404
        content: |-
          {
             "errors": "This project doesn't exist"
          }
        headers: []
        description: '404'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer gf8VE3Z6d6Dkvab1c5a4Peh'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/projects/{id}'
    metadata:
      groupName: 'Projects for admins'
      groupDescription: |-

        APIs for projects
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a project'
      description: 'This endpoint enable the admin to update a project'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The id of the project to be updated.'
        required: true
        example: 9
        type: integer
        custom: []
    cleanUrlParameters:
      id: 9
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      title:
        name: title
        description: ''
        required: false
        example: est
        type: string.
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: facere
        type: string.
        custom: []
    cleanBodyParameters:
      title: est
      description: facere
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
             "message": "The project has been updated successfully"
          }
        headers: []
        description: '201'
        custom: []
      -
        status: 404
        content: |-
          {
             "errors": "This project doesn't exist"
          }
        headers: []
        description: '404'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer dPhkc315aDabfVg8Z6E64ve'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/projects/{id}'
    metadata:
      groupName: 'Projects for admins'
      groupDescription: |-

        APIs for projects
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a project'
      description: 'This endpoint enable the admin to delete a project with specific id'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The id of the project to be deleted.'
        required: true
        example: 3
        type: integer
        custom: []
    cleanUrlParameters:
      id: 3
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
             "message": "The project has been deleted successfully"
          }
        headers: []
        description: '200'
        custom: []
      -
        status: 404
        content: |-
          {
             "errors": "This project doesn't exist"
          }
        headers: []
        description: '404'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer vZE6cPVf8b5ae641Dakhgd3'
    controller: null
    method: null
    route: null
    custom: []
