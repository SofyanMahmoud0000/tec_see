name: User
description: |-

  APIs for users
endpoints:
  -
    httpMethods:
      - GET
    uri: api/projects/users
    metadata:
      groupName: User
      groupDescription: |-

        APIs for users
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all projects'
      description: 'This endpoint returns all the user''s projects'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "projects": [
             {
                 "id": 1,
                 "title": "Test project",
                 "description": "new description",
                 "created_at": "2022-09-29 15:04:27",
                 "updated_at": "2022-09-29 15:04:27"
             }
           ]
          }
        headers: []
        description: '200'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 5f4gPe6chV36da8Eav1bZDk'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/projects/{id}/users'
    metadata:
      groupName: User
      groupDescription: |-

        APIs for users
      subgroup: ''
      subgroupDescription: ''
      title: 'Get specific project'
      description: |-
        This endpoint return the project with specific Id.
        The user must be assigned to a task belongs to this project to be able to get access the project
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'number The id of the project the user want to get.'
        required: true
        example: 9
        type: integer
        custom: []
    cleanUrlParameters:
      id: 9
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "project": {
             "id": 1,
             "title": "Test project",
             "description": "new description",
             "created_at": "2022-09-29 15:04:27",
             "updated_at": "2022-09-29 15:04:27"
           }
          }
        headers: []
        description: '200'
        custom: []
      -
        status: 403
        content: |-
          {
             "errors": "This project doesn't belong to you"
          }
        headers: []
        description: '403'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer dfD1gZ6kVe8acb4vhEa36P5'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/tasks/users
    metadata:
      groupName: User
      groupDescription: |-

        APIs for users
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all tasks'
      description: 'This endpoint returns all the user''s tasks'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "tasks": [
                 {
                     "id": 1,
                     "title": "Task 1",
                     "description": "description",
                     "detail": null,
                     "done": 0,
                     "project_id": 1,
                     "user_id": 11,
                     "created_at": "2022-09-29T15:04:38.000000Z",
                     "updated_at": "2022-09-29T16:56:22.000000Z"
                 },
                 {
                     "id": 2,
                     "title": "Task 2",
                     "description": "description",
                     "detail": "The tasks has been finished by sofyan",
                     "done": 1,
                     "project_id": 1,
                     "user_id": 11,
                     "created_at": "2022-09-29T15:10:12.000000Z",
                     "updated_at": "2022-09-29T16:43:31.000000Z"
                 }
             ]
          }
        headers: []
        description: '200'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 5Dk3bdec8h1EfaPZg6v4V6a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/tasks/submitted/users
    metadata:
      groupName: User
      groupDescription: |-

        APIs for users
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all submitted tasks'
      description: 'This endpoint returns all the user''s submitted tasks'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "tasks": [
              {
                  "id": 2,
                  "title": "Task 2",
                  "description": "description",
                  "detail": "The tasks has been finished by sofyan",
                  "done": 1,
                  "project_id": 1,
                  "user_id": 11,
                  "created_at": "2022-09-29T15:10:12.000000Z",
                  "updated_at": "2022-09-29T16:43:31.000000Z"
              }
            ]
          }
        headers: []
        description: '200'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer be51fdh68P4DEZcaVakv6g3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/tasks/pending/users
    metadata:
      groupName: User
      groupDescription: |-

        APIs for users
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all pending tasks'
      description: 'This endpoint returns all the user''s pending tasks'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "tasks": [
              {
                "id": 1,
                "title": "Task 1",
                "description": "description",
                "detail": null,
                "done": 0,
                "project_id": 1,
                "user_id": 11,
                "created_at": "2022-09-29T15:04:38.000000Z",
                "updated_at": "2022-09-29T16:56:22.000000Z"
              }
           ]
          }
        headers: []
        description: '200'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer c8Ddk3v4a65Zfageh6PbV1E'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/tasks/{id}/users'
    metadata:
      groupName: User
      groupDescription: |-

        APIs for users
      subgroup: ''
      subgroupDescription: ''
      title: 'Get specific task'
      description: |-
        This endpoint return the task with specific Id.
        The user must be assigned to this task to be able to get access the task
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'number The id of the task the user want to get.'
        required: true
        example: 4
        type: integer
        custom: []
    cleanUrlParameters:
      id: 4
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "task": {
             "id": 1,
             "title": "Task 1",
             "description": "description",
             "detail": null,
             "done": 0,
             "project_id": 1,
             "user_id": 11,
             "created_at": "2022-09-29T15:04:38.000000Z",
             "updated_at": "2022-09-29T16:56:22.000000Z"
           }
          }
        headers: []
        description: '200'
        custom: []
      -
        status: 403
        content: |-
          {
             "errors": "This task doesn't belong to you"
          }
        headers: []
        description: '403'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6Ve8E4fk536ha1bvdPZcDga'
    controller: null
    method: null
    route: null
    custom: []
