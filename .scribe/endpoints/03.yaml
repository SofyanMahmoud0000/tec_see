name: 'Tasks for users'
description: 'This endpoint enable the user to submit a task'
endpoints:
  -
    httpMethods:
      - POST
    uri: 'api/tasks/{id}/submit'
    metadata:
      groupName: 'Tasks for users'
      groupDescription: 'This endpoint enable the user to submit a task'
      subgroup: ''
      subgroupDescription: ''
      title: 'Submit a task'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The id of the task to be submitted.'
        required: true
        example: 15
        type: integer
        custom: []
    cleanUrlParameters:
      id: 15
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      detail:
        name: detail
        description: ''
        required: false
        example: recusandae
        type: string
        custom: []
    cleanBodyParameters:
      detail: recusandae
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
             "message": "The task has been submitted successfully"
          }
        headers: []
        description: '201'
        custom: []
      -
        status: 400
        content: |-
          {
             "errors": "The task is already submitted"
          }
        headers: []
        description: '400'
        custom: []
      -
        status: 403
        content: |-
          {
             "errors": "You are not assigned to this task"
          }
        headers: []
        description: '403'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ag851v64fc6Phb3VdEDekZa'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/tasks/users
    metadata:
      groupName: 'Tasks for users'
      groupDescription: 'This endpoint returns all the user''s tasks'
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all tasks'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "tasks": [
                 {
                     "id": 1,
                     "title": "Task 1",
                     "description": "description",
                     "detail": null,
                     "done": 0,
                     "project_id": 1,
                     "user_id": 11,
                     "created_at": "2022-09-29T15:04:38.000000Z",
                     "updated_at": "2022-09-29T16:56:22.000000Z"
                 },
                 {
                     "id": 2,
                     "title": "Task 2",
                     "description": "description",
                     "detail": "The tasks has been finished by sofyan",
                     "done": 1,
                     "project_id": 1,
                     "user_id": 11,
                     "created_at": "2022-09-29T15:10:12.000000Z",
                     "updated_at": "2022-09-29T16:43:31.000000Z"
                 }
             ]
          }
        headers: []
        description: '200'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Egc4aPbfdkVe1D6Za83h65v'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/tasks/submitted/users
    metadata:
      groupName: 'Tasks for users'
      groupDescription: 'This endpoint returns all the user''s submitted tasks'
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all submitted tasks'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "tasks": [
              {
                  "id": 2,
                  "title": "Task 2",
                  "description": "description",
                  "detail": "The tasks has been finished by sofyan",
                  "done": 1,
                  "project_id": 1,
                  "user_id": 11,
                  "created_at": "2022-09-29T15:10:12.000000Z",
                  "updated_at": "2022-09-29T16:43:31.000000Z"
              }
            ]
          }
        headers: []
        description: '200'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer DcPZEvd8eb13afah5Vk664g'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/tasks/pending/users
    metadata:
      groupName: 'Tasks for users'
      groupDescription: 'This endpoint returns all the user''s pending tasks'
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all pending tasks'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "tasks": [
              {
                "id": 1,
                "title": "Task 1",
                "description": "description",
                "detail": null,
                "done": 0,
                "project_id": 1,
                "user_id": 11,
                "created_at": "2022-09-29T15:04:38.000000Z",
                "updated_at": "2022-09-29T16:56:22.000000Z"
              }
           ]
          }
        headers: []
        description: '200'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer fh46aPkva1Vbg5cEZ68dDe3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/tasks/{id}/users'
    metadata:
      groupName: 'Tasks for users'
      groupDescription: |-
        This endpoint return the task with specific Id.
        The user must be assigned to this task to be able to get access the task
      subgroup: ''
      subgroupDescription: ''
      title: 'Get a specific task'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'number The id of the task the user want to get.'
        required: true
        example: 4
        type: integer
        custom: []
    cleanUrlParameters:
      id: 4
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "task": {
             "id": 1,
             "title": "Task 1",
             "description": "description",
             "detail": null,
             "done": 0,
             "project_id": 1,
             "user_id": 11,
             "created_at": "2022-09-29T15:04:38.000000Z",
             "updated_at": "2022-09-29T16:56:22.000000Z"
           }
          }
        headers: []
        description: '200'
        custom: []
      -
        status: 403
        content: |-
          {
             "errors": "This task doesn't belong to you"
          }
        headers: []
        description: '403'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer avegacEbVZk15P4D68d3hf6'
    controller: null
    method: null
    route: null
    custom: []
